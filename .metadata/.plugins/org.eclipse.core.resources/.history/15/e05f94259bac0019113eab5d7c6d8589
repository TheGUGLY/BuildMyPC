package com.app.dao;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import org.hibernate.HibernateException;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.app.other.EnumCategory;
import com.app.other.EnumRole;
import com.app.pojos.Login;
import com.app.pojos.User;


@Repository
@Transactional
public class DaoImplementation implements IAdminDao, ICommonDao, IUserDao {

	@Autowired
	private SessionFactory sf;
	
	
	public DaoImplementation() {
		super();
		System.out.println("in dao ");
	}


	@Override
	public List<EnumCategory> fetchCategory(){
		List<EnumCategory> category= Arrays.asList(EnumCategory.values());
		return category;
	}
	
	
	@Override
	public EnumRole loginUser(Login login){
		Login l = sf.getCurrentSession().createQuery("Select l From Login l where l.Email=:email",Login.class).setParameter("email",login.getEmail()).getSingleResult();
		if(!l.getPassword().equals(login.getPassword())){
			
		}
		return l.getRole();
	}
	
	@Override
	public User fetchUser(Login l){
		return sf.getCurrentSession().createQuery("select u FROM User u where u.Email=:email", User.class).setParameter("email", l.getEmail()).getSingleResult();
	}


	@Override
	public boolean signUp(User u, Login login) {
		try{
			sf.getCurrentSession().save(u);
			sf.getCurrentSession().save(login);
			return true;
		}
		catch(HibernateException he){
			return false;
		}
	}
	
}
